plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.eazybytes'
version = '0.0.1-SNAPSHOT'
description = 'Microservice of cards'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(18)
	}
}


bootBuildImage {
	imageName = "myorg/${project.name}:${project.version}"
	builder = "paketobuildpacks/builder:base" // or tiny/full based on needs
	environment = [
			"BP_JVM_VERSION": "18", // specify JDK version for the buildpack
		//	"BP_OCI_SOURCE": "https://github.com/myorg/myrepo"
	]

	// Optional: configure registry if pushing to Docker Hub or ECR
	publish = false // true if you want to push directly to registry
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}
ext {
	set('springCloudVersion', "2025.0.0")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.13'
	implementation 'org.springframework.cloud:spring-cloud-config-server'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
